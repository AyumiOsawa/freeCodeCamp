[{"/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/App.js":"1","/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/features/input/inputSlice.js":"2","/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/features/input/Input.js":"3","/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/app/store.js":"4","/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/features/preview/Preview.js":"5","/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/index.js":"6"},{"size":350,"mtime":1609780456833,"results":"7","hashOfConfig":"8"},{"size":653,"mtime":1610308283213,"results":"9","hashOfConfig":"8"},{"size":674,"mtime":1610308460780,"results":"10","hashOfConfig":"8"},{"size":180,"mtime":1610308375280,"results":"11","hashOfConfig":"8"},{"size":914,"mtime":1610308766212,"results":"12","hashOfConfig":"8"},{"size":354,"mtime":1609428267812,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jjvwcc",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/App.js",[],"/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/features/input/inputSlice.js",[],"/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/features/input/Input.js",[],"/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/app/store.js",[],"/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/features/preview/Preview.js",["27","28","29","30"],"/Users/ayumi/git/freeCodeCamp/front-end_library_project/markdown_previewer/src/index.js",[],["31","32"],{"ruleId":"33","severity":1,"message":"34","line":9,"column":7,"nodeType":"35","messageId":"36","endLine":9,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":23,"column":17,"nodeType":"39","endLine":23,"endColumn":51},{"ruleId":"33","severity":1,"message":"40","line":25,"column":5,"nodeType":"35","messageId":"36","endLine":25,"endColumn":16},{"ruleId":"37","severity":1,"message":"41","line":25,"column":19,"nodeType":"39","endLine":25,"endColumn":62},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'parentElm' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'unsubscribe' is assigned a value but never used.","Assignments to the 'unsubscribe' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-global-assign","no-unsafe-negation"]